{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Countries=function Countries(_ref){var countries=_ref.countries,term=_ref.term,region=_ref.region,onCountrySelect=_ref.onCountrySelect;var numberWithSpaces=function numberWithSpaces(x){return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,' ');};var Rendered=countries.map(function(country){var CountryName=country.name;CountryName=CountryName.replace(/\\s+/g,'');CountryName=CountryName.toLowerCase();if(term){if(country.name==='Israel'){return null;}if(CountryName.includes(term,0)){return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",onClick:function onClick(){return onCountrySelect(country);},children:[/*#__PURE__*/_jsx(\"img\",{src:country.flag,className:\"card-img-top\",alt:\"...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title\",children:country.name}),/*#__PURE__*/_jsx(\"p\",{children:\"Population: \".concat(country.population)}),/*#__PURE__*/_jsx(\"p\",{children:\"Region: \".concat(country.region)}),/*#__PURE__*/_jsx(\"p\",{children:\"Capital: \".concat(country.capital,\" \")})]})]},country.alpha3Code);}else{return null;}}else{if(region==='All Countries'){if(country.name==='Israel'){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",onClick:function onClick(){return onCountrySelect(country);},children:[/*#__PURE__*/_jsx(\"img\",{src:country.flag,className:\"card-img-top\",alt:\"...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title\",children:country.name}),/*#__PURE__*/_jsx(\"p\",{children:\"Population: \".concat(numberWithSpaces(country.population))}),/*#__PURE__*/_jsx(\"p\",{children:\"Region: \".concat(country.region)}),/*#__PURE__*/_jsx(\"p\",{children:\"Capital: \".concat(country.capital,\" \")})]})]},country.alpha3Code);}else{if(region===country.region){return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",onClick:function onClick(){return onCountrySelect(country);},children:[/*#__PURE__*/_jsx(\"img\",{src:country.flag,className:\"card-img-top\",alt:\"...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title\",children:country.name}),/*#__PURE__*/_jsx(\"p\",{children:\"Population: \".concat(country.population)}),/*#__PURE__*/_jsx(\"p\",{children:\"Region: \".concat(country.region)}),/*#__PURE__*/_jsx(\"p\",{children:\"Capital: \".concat(country.capital,\" \")})]})]},country.alpha3Code);}else{return null;}}}});Rendered=Rendered.filter(function(n){return n;});return/*#__PURE__*/_jsx(\"div\",{className:\"countries\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{children:Rendered.length===0?/*#__PURE__*/_jsx(\"h1\",{children:\"No Results\"}):null}),/*#__PURE__*/_jsx(\"div\",{className:\"grid\",children:Rendered})]})});};export default Countries;","map":{"version":3,"sources":["E:/frontend mentor/Countries/countries/src/components/countries.js"],"names":["React","Countries","countries","term","region","onCountrySelect","numberWithSpaces","x","toString","replace","Rendered","map","country","CountryName","name","toLowerCase","includes","flag","population","capital","alpha3Code","filter","n","length"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nconst Countries = ({ countries, term, region, onCountrySelect }) => {\r\n  const numberWithSpaces = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\r\n  }\r\n  let Rendered = countries.map((country) => {\r\n    let CountryName = country.name\r\n    CountryName = CountryName.replace(/\\s+/g, '')\r\n    CountryName = CountryName.toLowerCase()\r\n    if (term) {\r\n      if (country.name === 'Israel') {\r\n        return null\r\n      }\r\n      if (CountryName.includes(term, 0)) {\r\n        return (\r\n          <div\r\n            className=\"card\"\r\n            key={country.alpha3Code}\r\n            onClick={() => onCountrySelect(country)}\r\n          >\r\n            <img src={country.flag} className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">{country.name}</h4>\r\n              <p>{`Population: ${country.population}`}</p>\r\n              <p>{`Region: ${country.region}`}</p>\r\n              <p>{`Capital: ${country.capital} `}</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return null\r\n      }\r\n    } else {\r\n      if (region === 'All Countries') {\r\n        if (country.name === 'Israel') {\r\n          return null\r\n        }\r\n        return (\r\n          <div\r\n            className=\"card\"\r\n            key={country.alpha3Code}\r\n            onClick={() => onCountrySelect(country)}\r\n          >\r\n            <img src={country.flag} className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">{country.name}</h4>\r\n              <p>{`Population: ${numberWithSpaces(country.population)}`}</p>\r\n              <p>{`Region: ${country.region}`}</p>\r\n              <p>{`Capital: ${country.capital} `}</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        if (region === country.region) {\r\n          return (\r\n            <div\r\n              className=\"card\"\r\n              key={country.alpha3Code}\r\n              onClick={() => onCountrySelect(country)}\r\n            >\r\n              <img src={country.flag} className=\"card-img-top\" alt=\"...\" />\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">{country.name}</h4>\r\n                <p>{`Population: ${country.population}`}</p>\r\n                <p>{`Region: ${country.region}`}</p>\r\n                <p>{`Capital: ${country.capital} `}</p>\r\n              </div>\r\n            </div>\r\n          )\r\n        } else {\r\n          return null\r\n        }\r\n      }\r\n    }\r\n  })\r\n  Rendered = Rendered.filter((n) => n)\r\n  return (\r\n    <div className=\"countries\">\r\n      <div className=\"container\">\r\n        <div>{Rendered.length === 0 ? <h1>No Results</h1> : null}</div>\r\n        <div className=\"grid\">{Rendered}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Countries\r\n"]},"metadata":{},"sourceType":"module"}