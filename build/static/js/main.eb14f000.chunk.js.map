{"version":3,"sources":["components/Header.js","components/dropdwon.js","components/Search.js","components/countries.js","components/PopupCard.js","components/App.js","index.js"],"names":["Header","useState","darkTheme","setdarkTheme","className","class","onClick","primery","background","font","document","documentElement","style","setProperty","changeTheme","type","id","Dropdwon","options","onRegionChange","selected","setSelected","renderedOption","map","option","region","Search","onTermChange","term","setTerm","value","onChange","e","target","placeholder","Countries","countries","onCountrySelect","Rendered","country","x","CountryName","name","replace","toLowerCase","includes","src","flag","alt","population","capital","alpha3Code","toString","filter","n","length","PopupCard","RenderedCurrency","RenderdLanguages","topDomain","visible","setVisible","RenderList","item","render","itm","second_itm","index","topLevelDomain","toUpperCase","languages","currencies","nativeName","subregion","App","useEffect","fetch","a","axios","get","data","setResults","Results","termChange","setTermChange","selectedRegion","setSelectedRegion","selectedCountry","setSelectedCountry","str","ReactDOM","querySelector"],"mappings":"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","file":"static/js/main.eb14f000.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Header = () => {\r\n  const [darkTheme, setdarkTheme] = useState(true)\r\n  const changeTheme = () => {\r\n    setdarkTheme(!darkTheme)\r\n    let primery, background, font\r\n    if (darkTheme) {\r\n      background = '#212E37'\r\n      primery = '#2B3743'\r\n      font = '#fff'\r\n    } else {\r\n      background = '#fff'\r\n      primery = '#fff'\r\n      font = '#0E0E0E'\r\n    }\r\n\r\n    document.documentElement.style.setProperty('--primary-color', primery)\r\n    document.documentElement.style.setProperty('--background-color', background)\r\n    document.documentElement.style.setProperty('--font-color', font)\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"card\">\r\n        <div className=\"container flex\">\r\n          <h1>Where In The World</h1>\r\n          <div className=\"theme\">\r\n            <div class=\"form-check form-switch flex\">\r\n              <i class={`${darkTheme ? 'far' : 'fas'} fa-moon`}></i>\r\n              <div>\r\n                <input\r\n                  onClick={() => {\r\n                    changeTheme()\r\n                  }}\r\n                  class=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"flexSwitchCheckDefault\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Header\r\n","import React, { useState } from 'react'\r\n\r\nconst Dropdwon = ({ options, onRegionChange }) => {\r\n  const [selected, setSelected] = useState('Fliter by Region')\r\n  const renderedOption = options.map((option) => {\r\n    return (\r\n      <li key={option.region}>\r\n        <a\r\n          className=\"dropdown-item\"\r\n          onClick={() => {\r\n            setSelected(option.region)\r\n            onRegionChange(option.region)\r\n          }}\r\n        >\r\n          {option.region}\r\n        </a>\r\n      </li>\r\n    )\r\n  })\r\n  return (\r\n    <div className=\"dropdown felx\">\r\n      <button\r\n        className=\"btn dropdown-toggle\"\r\n        type=\"button\"\r\n        id=\"dropdownMenuButton1\"\r\n        data-bs-toggle=\"dropdown\"\r\n        aria-expanded=\"false\"\r\n      >\r\n        {selected}\r\n      </button>\r\n      <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n        {renderedOption}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\nexport default Dropdwon\r\n","import React, { useState, useEffect } from 'react'\r\nimport Dropdwon from './dropdwon'\r\nconst options = [\r\n  {\r\n    region: 'All Countries',\r\n  },\r\n  {\r\n    region: 'Africa',\r\n  },\r\n  {\r\n    region: 'Americas',\r\n  },\r\n  {\r\n    region: 'Asia',\r\n  },\r\n  {\r\n    region: 'Europe',\r\n  },\r\n  {\r\n    region: 'Oceania',\r\n  },\r\n]\r\nconst Search = ({ onTermChange, onRegionChange }) => {\r\n  const [term, setTerm] = useState('')\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <div className=\"container flex\">\r\n        <div className=\"input-group mb-3\">\r\n          <span className=\"input-group-text\" id=\"basic-addon1\">\r\n            <i className=\"fas fa-search\"></i>\r\n          </span>\r\n          <input\r\n            value={term}\r\n            onChange={(e) => {\r\n              onTermChange(e.target.value)\r\n              setTerm(e.target.value)\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control shadow-none\"\r\n            placeholder=\"Search for a country\"\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\"\r\n          />\r\n        </div>\r\n        <Dropdwon options={options} onRegionChange={onRegionChange} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Search\r\n","import React from 'react'\r\n\r\nconst Countries = ({ countries, term, region, onCountrySelect }) => {\r\n  const numberWithSpaces = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\r\n  }\r\n  let Rendered = countries.map((country) => {\r\n    let CountryName = country.name\r\n    CountryName = CountryName.replace(/\\s+/g, '')\r\n    CountryName = CountryName.toLowerCase()\r\n    if (term) {\r\n      if (country.name === 'Israel') {\r\n        return null\r\n      }\r\n      if (CountryName.includes(term, 0)) {\r\n        return (\r\n          <div\r\n            className=\"card\"\r\n            key={country.alpha3Code}\r\n            onClick={() => onCountrySelect(country)}\r\n          >\r\n            <img src={country.flag} className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">{country.name}</h4>\r\n              <p>{`Population: ${country.population}`}</p>\r\n              <p>{`Region: ${country.region}`}</p>\r\n              <p>{`Capital: ${country.capital} `}</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return null\r\n      }\r\n    } else {\r\n      if (region === 'All Countries') {\r\n        if (country.name === 'Israel') {\r\n          return null\r\n        }\r\n        return (\r\n          <div\r\n            className=\"card\"\r\n            key={country.alpha3Code}\r\n            onClick={() => onCountrySelect(country)}\r\n          >\r\n            <img src={country.flag} className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">{country.name}</h4>\r\n              <p>{`Population: ${numberWithSpaces(country.population)}`}</p>\r\n              <p>{`Region: ${country.region}`}</p>\r\n              <p>{`Capital: ${country.capital} `}</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        if (region === country.region) {\r\n          return (\r\n            <div\r\n              className=\"card\"\r\n              key={country.alpha3Code}\r\n              onClick={() => onCountrySelect(country)}\r\n            >\r\n              <img src={country.flag} className=\"card-img-top\" alt=\"...\" />\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">{country.name}</h4>\r\n                <p>{`Population: ${country.population}`}</p>\r\n                <p>{`Region: ${country.region}`}</p>\r\n                <p>{`Capital: ${country.capital} `}</p>\r\n              </div>\r\n            </div>\r\n          )\r\n        } else {\r\n          return null\r\n        }\r\n      }\r\n    }\r\n  })\r\n  Rendered = Rendered.filter((n) => n)\r\n  return (\r\n    <div className=\"countries\">\r\n      <div className=\"container\">\r\n        <div>{Rendered.length === 0 ? <h1>No Results</h1> : null}</div>\r\n        <div className=\"grid\">{Rendered}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Countries\r\n","import React, { useState } from 'react'\r\n\r\nconst PopupCard = ({ visible, setVisible, country }) => {\r\n  let RenderedCurrency\r\n  let RenderdLanguages\r\n  let topDomain\r\n  const numberWithSpaces = (x) => {\r\n    if (country.length !== 1) {\r\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n  const RenderList = (item) => {\r\n    let render = item.map((itm) => {\r\n      return itm.name\r\n    })\r\n\r\n    const length = render.length\r\n    render = render.map((second_itm, index) => {\r\n      return length - 1 === index ? ` ${second_itm}` : `${second_itm}, `\r\n    })\r\n    return render\r\n  }\r\n  if (country.length !== 1) {\r\n    topDomain = country.topLevelDomain\r\n    topDomain = topDomain[0].toUpperCase()\r\n    RenderdLanguages = RenderList(country.languages)\r\n    RenderedCurrency = RenderList(country.currencies)\r\n  }\r\n  return (\r\n    <div className={`popup-card clear card ${visible ? '' : 'invisible'}`}>\r\n      <div className=\"header flex\">\r\n        <h1>More About the Country</h1>\r\n        <button\r\n          onClick={() => setVisible(false)}\r\n          className={`close-btn ${visible ? '' : 'invisible'}`}\r\n        >\r\n          <i class=\"fas fa-times fa-2x\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"content grid\">\r\n        <img src={country.flag}></img>\r\n\r\n        <div className=\"info\">\r\n          <div className=\"grid\">\r\n            <div className=\"colm-1\">\r\n              <h2 className=\"name bold\">{country.name}</h2>\r\n              <div className=\"sub-info flex\">\r\n                <p className=\"bold\">Native Name:</p> <p>{country.nativeName}</p>\r\n              </div>\r\n              <div className=\"sub-info flex\">\r\n                <p className=\"bold\">Population:</p>{' '}\r\n                <p>{numberWithSpaces(country.population)}</p>\r\n              </div>\r\n              <div className=\"sub-info flex\">\r\n                <p className=\"bold\">Region:</p> <p>{country.region}</p>\r\n              </div>\r\n              <div className=\"sub-info flex\">\r\n                <p className=\"bold\">Sub Region:</p> <p>{country.subregion}</p>\r\n              </div>\r\n              <div className=\"sub-info flex\">\r\n                <p className=\"bold\">Capital:</p> <p>{country.capital}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"colm-2\">\r\n              <div className=\"sub-info flex\">\r\n                <p className=\"bold\">Top Level Domain:</p>\r\n                <p>{topDomain}</p>\r\n              </div>\r\n              <div className=\"sub-info flex\">\r\n                <p className=\"bold\">Currencies:</p>\r\n                <p className=\"flex\">{RenderedCurrency}</p>\r\n              </div>\r\n              <div className=\"sub-info flex\">\r\n                <p className=\"bold\">Languges:</p>\r\n                <p className=\"flex\">{RenderdLanguages}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopupCard\r\n","import React, { useEffect, useState } from 'react'\r\nimport Header from './Header'\r\nimport Search from './Search'\r\nimport Countries from './countries'\r\nimport PopupCard from './PopupCard'\r\nimport axios from 'axios'\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const { data } = await axios.get('https://restcountries.com/v2/all', {})\r\n      setResults(data)\r\n    }\r\n    fetch()\r\n  }, [])\r\n  const [Results, setResults] = useState([])\r\n  const [termChange, setTermChange] = useState('')\r\n  const [selectedRegion, setSelectedRegion] = useState('All Countries')\r\n  const [selectedCountry, setSelectedCountry] = useState([Results[0]])\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const onTermChange = (term) => {\r\n    let str = term\r\n    str = str.replace(/\\s+/g, '')\r\n    str = str.toLowerCase()\r\n    setTermChange(str)\r\n  }\r\n  const onRegionChange = (region) => {\r\n    setSelectedRegion(region)\r\n  }\r\n  const onCountrySelect = (country) => {\r\n    setVisible(true)\r\n    setSelectedCountry(country)\r\n  }\r\n  return (\r\n    <div>\r\n      <PopupCard\r\n        visible={visible}\r\n        setVisible={setVisible}\r\n        country={selectedCountry}\r\n      />\r\n      <Header />\r\n      <Search onTermChange={onTermChange} onRegionChange={onRegionChange} />\r\n      <Countries\r\n        selectedCountry={selectedCountry}\r\n        onCountrySelect={onCountrySelect}\r\n        countries={Results}\r\n        term={termChange}\r\n        region={selectedRegion}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))\r\n"],"sourceRoot":""}